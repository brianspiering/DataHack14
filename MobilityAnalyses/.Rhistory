table_data <- table("event", "World Cup")
table_data <- table(agg_inbound)
agg_outbound
agg_inbound
sum(both_country$OUTBOUND_MESSAGES, both_country$INBOUND_MESSAGES)
x <- list( alpha = 1:5, beta = "Bravo",
gamma = list(a=1:3, b=NULL),
delta = c(TRUE, FALSE) )
table_data <- x
toJSON(agg_inbound)
sink("temp.json")
cat(toJSON(table_data))
sink()
agg_inbound
json <- list("event" = "World Cup", "company" = "Facebook",
"home_country" = orig_country,
"visiting_country" = dest_country
"total_data" = total_data)
json <- list("event" = "World Cup", "company" = "Facebook",
"home_country" = orig_country,
"visiting_country" = dest_country,
"total_data" = total_data)
json
json <- list("event" = "World Cup", "company" = "Facebook",
"home_country" = orig_country,
"visiting_country" = dest_country,
"total_data" = total_data)
total_data<- sum(both_country$OUTBOUND_MESSAGES)
json <- list("event" = "World Cup", "company" = "Facebook",
"home_country" = orig_country,
"visiting_country" = dest_country,
"total_data" = total_data)
json
agg_outbound
agg_outbound[,1]
list("cust_id": agg_outbound[,1][1])
list("cust_id", agg_outbound[,1][1])
json
element<- list("cust_id", agg_outbound[,1][1])
element
agg_outbound[,2]
agg_outbound[,2][1]
agg_outbound[,2][2]
agg_outbound[,2][3]
data_used <- numeric()
c(data_used, element)
data_used <- c(data_used, element)
data_used
element<- list("cust_id", agg_outbound[,1][i], "data_used", agg_outbound[,2][i])
data_used <- c(data_used, element)
i <- 1
element<- list("cust_id", agg_outbound[,1][i], "data_used", agg_outbound[,2][i])
data_used <- c(data_used, element)
i <- 2
element<- list("cust_id", agg_outbound[,1][i], "data_used", agg_outbound[,2][i])
data_used <- c(data_used, element)
data_used
json
table_data <- data_used
sink("temp.json")
cat(toJSON(table_data))
sink()
as.numeric(agg_outbound[,1][i])
as.numeric(agg_outbound[,1][3])
as.numeric(agg_outbound[,1][4])
rm(data_used)
i <- 1
element<- list("cust_id", as.numeric(agg_outbound[,1][i]), "data_used", agg_outbound[,2][i])
data_used <- c(data_used, element)
data_used <- numeric()
i <- 1
element<- list("cust_id", as.numeric(agg_outbound[,1][i]), "data_used", agg_outbound[,2][i])
data_used <- c(data_used, element)
i <- 1
element<- list("cust_id", as.numeric(agg_outbound[,1][i]), "data_used", agg_outbound[,2][i])
data_used <- c(data_used, element)
i <- 2
element<- list("cust_id", as.numeric(agg_outbound[,1][i]), "data_used", agg_outbound[,2][i])
data_used <- c(data_used, element)
table_data <- data_used
toJSON(agg_inbound)
sink("temp.json")
cat(toJSON(table_data))
sink()
data_used <- numeric()
i <- 1
element<- list("cust_id" = as.numeric(agg_outbound[,1][i]), "data_used" = agg_outbound[,2][i])
data_used <- c(data_used, element)
i <- 2
element<- list("cust_id" = as.numeric(agg_outbound[,1][i]), "data_used" = agg_outbound[,2][i])
data_used <- c(data_used, element)
i <- 3
element<- list("cust_id" = as.numeric(agg_outbound[,1][i]), "data_used" = agg_outbound[,2][i])
data_used <- c(data_used, element)
sink("temp.json")
cat(toJSON(table_data))
sink()
data_used <- numeric()
i <- 1
element<- list("cust_id" = as.numeric(agg_outbound[,1][i]), "data_used" = agg_outbound[,2][i])
data_used <- c(data_used, element)
i <- 2
element<- list("cust_id" = as.numeric(agg_outbound[,1][i]), "data_used" = agg_outbound[,2][i])
data_used <- c(data_used, element)
i <- 3
element<- list("cust_id" = as.numeric(agg_outbound[,1][i]), "data_used" = agg_outbound[,2][i])
data_used <- c(data_used, element)
sink("temp.json")
cat(toJSON(table_data))
sink()
sink("temp.json")
cat(toJSON(table_data))
sink()
json <- list("event" = "World Cup", "company" = "Facebook",
"home_country" = orig_country,
"visiting_country" = dest_country,
"total_data" = total_data)
for(i in 1:length(agg_outbound)){
i <- 3
element<- list("cust_id" = as.numeric(agg_outbound[,1][i]), "data_used" = agg_outbound[,2][i])
json <- c(json, element)
}
table_data <- json
sink("temp.json")
cat(toJSON(table_data))
sink()
json <- numeric()
total_data<- sum(both_country$OUTBOUND_MESSAGES)
json <- list("event" = "World Cup", "company" = "Facebook",
"home_country" = orig_country,
"visiting_country" = dest_country,
"total_data" = total_data)
json
data_used <- numeric()
for(i in 1:length(agg_outbound)){
i <- 3
element<- list("cust_id" = as.numeric(agg_outbound[,1][i]), "data_used" = agg_outbound[,2][i])
data_used <- c(data_used, element)
}
json <- c(json, data_used)
table_data <- json
sink("temp.json")
cat(toJSON(table_data))
sink()
# List of packages for session
.packages = c("rjson")
# Install required CRAN packages (if not already installed)
.inst <- .packages %in% installed.packages()
if(length(.packages[!.inst]) > 0) install.packages(.packages[!.inst])
# Load packages into session
lapply(.packages, require, character.only=TRUE)
# General setup ----------------------------------------------------------------
cat("\014")    # Clear console
rm(list=ls())  # Delete all variables
graphics.off() # Close all open plots
# Define variables ---------------------
orig_country <- "U. K."
dest_country <- "BRAZIL"
#orig_country<- "UNITED STATES"
#dest_country <- "BRAZIL"
# Load data -----------
cat('Loading data...\n')
base_path <- "~/Documents/DataHack14/"
folder <- "Saturday_Data/" # "Tuesday_Data/" #
file_name <- "Mobility_Signaling_Peering_Traffic_subsample"
suffix <- ".csv"
end_point_in <- paste(base_path, folder, file_name, suffix, sep="")
Mobility_Signaling_Peering_Traffic <- read.csv(end_point_in)
# str(Mobility_Signaling_Peering_Traffic) # Look at data
cat("Number of rows:", nrow(Mobility_Signaling_Peering_Traffic))
# Convert dataframe numeric --------------------
Mobility_Signaling_Peering_Traffic$OUTBOUND_MESSAGES <- as.numeric(Mobility_Signaling_Peering_Traffic$OUTBOUND_MESSAGES)
Mobility_Signaling_Peering_Traffic$INBOUND_MESSAGES <- as.numeric(Mobility_Signaling_Peering_Traffic$INBOUND_MESSAGES)
# Define aggregate function-----------
outputAggs <- function(orig_country, dest_country) {
both_country <- subset(Mobility_Signaling_Peering_Traffic,
Mobility_Signaling_Peering_Traffic$DESTINATION_COUNTRY == dest_country
& Mobility_Signaling_Peering_Traffic$ORIGINATION_COUNTRY == orig_country)
agg_outbound <- aggregate(both_country$OUTBOUND_MESSAGES ~ both_country$PEERING_CUSTOMER_ID,
data = both_country,
FUN=sum)
agg_inbound <- aggregate(both_country$INBOUND_MESSAGES ~ both_country$PEERING_CUSTOMER_ID,
data = both_country,
FUN=sum)
agg_outbound <-  agg_outbound[order(agg_outbound[,2], decreasing=TRUE),]
#agg_outbound[1:10,]
agg_inbound <- agg_inbound[order(agg_inbound[,2], decreasing=TRUE),]
#agg_inbound[1:10,]
# Save data to json -----------------------------------------------------------
#table_data <- table(round(runif(100, 1, 5))) # Mock data
table_data <- table("event", "World Cup")
table_data <- table(agg_inbound)
x <- list( alpha = 1:5, beta = "Bravo",
gamma = list(a=1:3, b=NULL),
delta = c(TRUE, FALSE) )
total_data<- sum(both_country$OUTBOUND_MESSAGES)
json <- list("event" = "World Cup", "company" = "Facebook",
"home_country" = orig_country,
"visiting_country" = dest_country,
"total_data" = total_data)
json
data_used <- numeric()
for(i in 1:length(agg_outbound)){
element<- list("cust_id" = as.numeric(agg_outbound[,1][i]), "data_used" = agg_outbound[,2][i])
data_used <- c(data_used, element)
}
json <- c(json, data_used)
table_data <- data_used
toJSON(agg_inbound)
sink("temp.json")
cat(toJSON(table_data))
sink()
end_point_in <- paste(path, "in",name, type, sep="")
end_point_out <- paste(path, "out",name, type, sep="")
}
outputAggs(orig_country, dest_country)
# List of packages for session
.packages = c("rjson")
# Install required CRAN packages (if not already installed)
.inst <- .packages %in% installed.packages()
if(length(.packages[!.inst]) > 0) install.packages(.packages[!.inst])
# Load packages into session
lapply(.packages, require, character.only=TRUE)
# General setup ----------------------------------------------------------------
cat("\014")    # Clear console
rm(list=ls())  # Delete all variables
graphics.off() # Close all open plots
# Define variables ---------------------
orig_country <- "U. K."
dest_country <- "BRAZIL"
#orig_country<- "UNITED STATES"
#dest_country <- "BRAZIL"
# Load data -----------
cat('Loading data...\n')
base_path <- "~/Documents/DataHack14/"
folder <- "Saturday_Data/" # "Tuesday_Data/" #
file_name <- "Mobility_Signaling_Peering_Traffic_subsample"
suffix <- ".csv"
end_point_in <- paste(base_path, folder, file_name, suffix, sep="")
Mobility_Signaling_Peering_Traffic <- read.csv(end_point_in)
# str(Mobility_Signaling_Peering_Traffic) # Look at data
cat("Number of rows:", nrow(Mobility_Signaling_Peering_Traffic))
# Convert dataframe numeric --------------------
Mobility_Signaling_Peering_Traffic$OUTBOUND_MESSAGES <- as.numeric(Mobility_Signaling_Peering_Traffic$OUTBOUND_MESSAGES)
Mobility_Signaling_Peering_Traffic$INBOUND_MESSAGES <- as.numeric(Mobility_Signaling_Peering_Traffic$INBOUND_MESSAGES)
# Define aggregate function-----------
outputAggs <- function(orig_country, dest_country) {
both_country <- subset(Mobility_Signaling_Peering_Traffic,
Mobility_Signaling_Peering_Traffic$DESTINATION_COUNTRY == dest_country
& Mobility_Signaling_Peering_Traffic$ORIGINATION_COUNTRY == orig_country)
agg_outbound <- aggregate(both_country$OUTBOUND_MESSAGES ~ both_country$PEERING_CUSTOMER_ID,
data = both_country,
FUN=sum)
agg_inbound <- aggregate(both_country$INBOUND_MESSAGES ~ both_country$PEERING_CUSTOMER_ID,
data = both_country,
FUN=sum)
agg_outbound <-  agg_outbound[order(agg_outbound[,2], decreasing=TRUE),]
#agg_outbound[1:10,]
agg_inbound <- agg_inbound[order(agg_inbound[,2], decreasing=TRUE),]
#agg_inbound[1:10,]
# Save data to json -----------------------------------------------------------
#table_data <- table(round(runif(100, 1, 5))) # Mock data
table_data <- table("event", "World Cup")
table_data <- table(agg_inbound)
x <- list( alpha = 1:5, beta = "Bravo",
gamma = list(a=1:3, b=NULL),
delta = c(TRUE, FALSE) )
total_data<- sum(both_country$OUTBOUND_MESSAGES)
json <- list("event" = "World Cup", "company" = "Facebook",
"home_country" = orig_country,
"visiting_country" = dest_country,
"total_data" = total_data)
data_used <- numeric()
for(i in 1:length(agg_outbound)){
element<- list("cust_id" = as.numeric(agg_outbound[,1][i]), "data_used" = agg_outbound[,2][i])
data_used <- c(data_used, element)
}
json <- c(json, data_used)
toJSON(agg_inbound)
sink("temp.json")
cat(toJSON(json))
sink()
#end_point_in <- paste(path, "in",name, type, sep="")
#end_point_out <- paste(path, "out",name, type, sep="")
}
outputAggs(orig_country, dest_country)
length(agg_outbound)
both_country <- subset(Mobility_Signaling_Peering_Traffic,
Mobility_Signaling_Peering_Traffic$DESTINATION_COUNTRY == dest_country
& Mobility_Signaling_Peering_Traffic$ORIGINATION_COUNTRY == orig_country)
agg_outbound <- aggregate(both_country$OUTBOUND_MESSAGES ~ both_country$PEERING_CUSTOMER_ID,
data = both_country,
FUN=sum)
agg_inbound <- aggregate(both_country$INBOUND_MESSAGES ~ both_country$PEERING_CUSTOMER_ID,
data = both_country,
FUN=sum)
agg_outbound <-  agg_outbound[order(agg_outbound[,2], decreasing=TRUE),]
#agg_outbound[1:10,]
agg_inbound <- agg_inbound[order(agg_inbound[,2], decreasing=TRUE),]
#agg_inbound[1:10,]
# Save data to json -----------------------------------------------------------
#table_data <- table(round(runif(100, 1, 5))) # Mock data
table_data <- table("event", "World Cup")
table_data <- table(agg_inbound)
total_data<- sum(both_country$OUTBOUND_MESSAGES)
json <- list("event" = "World Cup", "company" = "Facebook",
"home_country" = orig_country,
"visiting_country" = dest_country,
"total_data" = total_data)
json
data_used <- numeric()
length(agg_outbound)
nrow(agg_outbound)
data_used <- numeric()
for(i in 1:nrow(agg_outbound)){
element<- list("cust_id" = as.numeric(agg_outbound[,1][i]), "data_used" = agg_outbound[,2][i])
data_used <- c(data_used, element)
}
json <- c(json, data_used)
json
data_used
json
json <- append(json, data_used)
json
json <- append(json, list(data_used))
json
rm(json)
json <- list("event" = "World Cup", "company" = "Facebook",
"home_country" = orig_country,
"visiting_country" = dest_country,
"total_data" = total_data)
data_used <- numeric()
for(i in 1:nrow(agg_outbound)){
element<- list("cust_id" = as.numeric(agg_outbound[,1][i]), "data_used" = agg_outbound[,2][i])
data_used <- c(data_used, element)
}
json <- append(json, list(data_used))
json
toJSON(agg_inbound)
sink("temp.json")
cat(toJSON(json))
sink()
nrow(agg)
nrow(agg_inbound)
nrow(agg_outbound)
for(i in 1:k)){
element<- list("cust_id" = as.numeric(agg_outbound[,1][i]), "data_used" = agg_outbound[,2][i])
data_used <- c(data_used, element)
}
for(i in 1:k){
element<- list("cust_id" = as.numeric(agg_outbound[,1][i]), "data_used" = agg_outbound[,2][i])
data_used <- c(data_used, element)
}
k<- nrow(agg_outbound)
for(i in 1:k){
element<- list("cust_id" = as.numeric(agg_outbound[,1][i]), "data_used" = agg_outbound[,2][i])
data_used <- c(data_used, element)
}
k
data_used
json <- append(json, list(data_used))
json
sink("temp.json")
cat(toJSON(json))
sink()
json
data_used <- numeric()
json
json <- numeric()
json <- list("event" = "World Cup", "company" = "Facebook",
"home_country" = orig_country,
"visiting_country" = dest_country,
"total_data" = total_data)
total_data<- sum(both_country$OUTBOUND_MESSAGES)
json <- numeric()
json <- list("event" = "World Cup", "company" = "Facebook",
"home_country" = orig_country,
"visiting_country" = dest_country,
"total_data" = total_data)
data_used <- numeric()
k<- nrow(agg_outbound)
for(i in 1:k){
element<- list("cust_id" = as.numeric(agg_outbound[,1][i]), "data_used" = agg_outbound[,2][i])
data_used <- append(data_used, list(element))
}
json <- append(json, list(data_used))
json
sink("temp.json")
cat(toJSON(json))
sink()
json <- append(json, "team_members" = list(data_used))
json
json
json <- list("event" = "World Cup", "company" = "Facebook",
"home_country" = orig_country,
"visiting_country" = dest_country,
"total_data" = total_data, "team_members"=list(data_used))
sink("temp.json")
cat(toJSON(json))
sink()
agg_inbound
agg_inbound[,1]
d <- data.frame(alpha=1:3, beta=4:6, gamma=7:9)
names(agg_inbound)
names(agg_inbound)[1]
names(agg_inbound)<- c("customer_id", "messages")
agg_inbound
names(agg_outbound) <- c("customer_id", "outbound_messages")
names(agg_inbound)<- c("customer_id", "inbound_messages")
agg_outbound
agg_both <-merge(agg_outbound, agg_inbound, by "customer_id")
agg_both <-merge(agg_outbound, agg_inbound, by= "customer_id")
agg_both
agg_inbound
agg_outbound
agg_both
total_data <- sum(agg_both$outbound_messages, agg_both$inbound_messages)
total_data
agg_both$total_messages <- agg_both$inbound_messages + agg_both$outbound_messages
total_data <- sum(agg_both$total_messages)
total_data
agg_both$total_messages[1]
agg_both$total_messages[2]
agg_both
agg_inbound
nrow(agg_inbound)
nrow(agg_outbound)
# List of packages for session
.packages = c("rjson")
# Install required CRAN packages (if not already installed)
.inst <- .packages %in% installed.packages()
if(length(.packages[!.inst]) > 0) install.packages(.packages[!.inst])
# Load packages into session
lapply(.packages, require, character.only=TRUE)
# General setup ----------------------------------------------------------------
cat("\014")    # Clear console
rm(list=ls())  # Delete all variables
graphics.off() # Close all open plots
# Define variables ---------------------
orig_country <- "U. K."
dest_country <- "BRAZIL"
#orig_country<- "UNITED STATES"
#dest_country <- "BRAZIL"
# Load data -----------
cat('Loading data...\n')
# Local box vs AWS
if (version$os =="darwin10.8.0") {
# Local
base_path <- "~/Documents/DataHack14/"
folder <- "Saturday_Data/"
file_name <- "Mobility_Signaling_Peering_Traffic_subsample"
} else if ("linux-gnu"){
# Remote
base_path <- ""
folder <- "data/"
file_name <- "Mobility_Signaling_Peering_Traffic_subsample"
}
suffix <- ".csv"
end_point_in <- paste(base_path, folder, file_name, suffix, sep="")
Mobility_Signaling_Peering_Traffic <- read.csv(end_point_in)
# str(Mobility_Signaling_Peering_Traffic) # Look at data
cat("Number of rows:", nrow(Mobility_Signaling_Peering_Traffic), "\n")
# Convert dataframe numeric --------------------
Mobility_Signaling_Peering_Traffic$OUTBOUND_MESSAGES <- as.numeric(Mobility_Signaling_Peering_Traffic$OUTBOUND_MESSAGES)
Mobility_Signaling_Peering_Traffic$INBOUND_MESSAGES <- as.numeric(Mobility_Signaling_Peering_Traffic$INBOUND_MESSAGES)
# Define aggregate function-----------
outputAggs <- function(orig_country, dest_country) {
both_country <- subset(Mobility_Signaling_Peering_Traffic,
Mobility_Signaling_Peering_Traffic$DESTINATION_COUNTRY == dest_country
& Mobility_Signaling_Peering_Traffic$ORIGINATION_COUNTRY == orig_country)
agg_outbound <- aggregate(both_country$OUTBOUND_MESSAGES ~ both_country$PEERING_CUSTOMER_ID,
data = both_country,
FUN=sum)
agg_inbound <- aggregate(both_country$INBOUND_MESSAGES ~ both_country$PEERING_CUSTOMER_ID,
data = both_country,
FUN=sum)
agg_outbound <-  agg_outbound[order(agg_outbound[,2], decreasing=TRUE),]
#agg_outbound[1:10,]
agg_inbound <- agg_inbound[order(agg_inbound[,2], decreasing=TRUE),]
print(agg_inbound)
#agg_inbound[1:10,]
names(agg_outbound) <- c("customer_id", "outbound_messages")
names(agg_inbound)<- c("customer_id", "inbound_messages")
agg_both <-merge(agg_outbound, agg_inbound, by= "customer_id")
# Save data to json -----------------------------------------------------------
agg_both$total_messages <- agg_both$inbound_messages + agg_both$outbound_messages
total_data <- sum(agg_both$total_messages)
# Define new variables
json <- numeric()
data_used <- numeric()
# Write out data for each customer / company team member
for(i in 1:nrow(agg_both)){
element<- list("cust_id" = as.numeric(agg_both$customer_id[i]), "data_used" = agg_both$total_messages[i])
data_used <- append(data_used, list(element))
}
# Create complete json object
json <- list("event" = "World Cup", "company" = "Facebook",
"home_country" = orig_country,
"visiting_country" = dest_country,
"total_data" = total_data, "team_members"=list(data_used))
# Define output file path
path = "./data/"
file_name <- "sample_data_001"
suffix = ".json"
end_point_out <- paste(path, file_name, suffix, sep="")
# Write file
sink(end_point_out)
cat(toJSON(json))
sink()
cat("JSON filed saved.")
}
outputAggs(orig_country, dest_country)
